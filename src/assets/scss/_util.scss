@use "sass:math";
@use "sass:string";
@use "sass:map";

@function fluid($min, $max, $minVw: 375, $maxVw: 1920) {
  $var: math.div(math.abs($max - $min), $maxVw - $minVw);

  @if $max > $min {
    $const: $max - $maxVw * $var;
    $in-between: $const + "px + " + ($var * 100) + "vw";

    @return string.unquote(
      "clamp(" + $min + "px, " + $in-between + ", " + $max + "px)"
    );
  } @else {
    $const: $max * -1 - $maxVw * $var;
    $in-between: "(" + $const + "px + " + ($var * 100) + "vw) * -1";

    @return string.unquote(
      "clamp(" + $max + "px, " + $in-between + ", " + $min + "px)"
    );
  }
}

$min-width: 786 !default;
$max-width: 1366 !default;

@function fv($value) {
  $ratio: math.div($min-width, $max-width);

  @return fluid($value * $ratio, $value, $min-width, $max-width);
}

@function unit($value, $unit: "px") {
  @return string.unquote($value + $unit);
}

@function em($value, $base) {
  @return unit(math.div($value, $base), "em");
}

@function rem($value, $base: 16) {
  @return unit(math.div($value, $base), "rem");
}

@function vw($value, $viewport-width) {
  @return unit(math.div($value, $viewport-width) * 100, "vw");
}

@function percent($value, $base) {
  @return math.percentage(math.div($value, $base));
}

@function lh($value, $base) {
  @return math.div($value, $base);
}

// font-weight
$thin: 100;
$extra-light: 200;
$light: 300;
$regular: 400;
$medium: 500;
$semi-bold: 600;
$bold: 700;
$extra-bold: 800;
$black: 900;
